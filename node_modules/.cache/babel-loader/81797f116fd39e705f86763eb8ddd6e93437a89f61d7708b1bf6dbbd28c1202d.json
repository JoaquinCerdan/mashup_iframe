{"ast":null,"code":"import _objectSpread from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Looker40SDK}from'@looker/sdk';import{AuthToken,AuthSession,BrowserTransport,DefaultSettings}from'@looker/sdk-rtl';var SDKSession=/*#__PURE__*/function(_AuthSession){_inherits(SDKSession,_AuthSession);var _super=_createSuper(SDKSession);function SDKSession(settings,transport){var _this;_classCallCheck(this,SDKSession);_this=_super.call(this,settings,transport||new BrowserTransport(settings));_this.activeToken=new AuthToken();return _this;}// This function checks to see if the user is already authenticated\n_createClass(SDKSession,[{key:\"fetchToken\",value:// This is a placeholder for the fetchToken function.\n// It is modified to make it useful later.\nfunction(){var _fetchToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",fetch(''));case 1:case\"end\":return _context.stop();}},_callee);}));function fetchToken(){return _fetchToken.apply(this,arguments);}return fetchToken;}()},{key:\"isAuthenticated\",value:function isAuthenticated(){var token=this.activeToken;if(!(token&&token.access_token))return false;return token.isActive();}// This function gets the current token or fetches a new one if necessary\n},{key:\"getToken\",value:function(){var _getToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var token,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(this.isAuthenticated()){_context2.next=8;break;}_context2.next=3;return this.fetchToken();case 3:token=_context2.sent;_context2.next=6;return token.json();case 6:res=_context2.sent;this.activeToken.setToken(res.user_token);case 8:return _context2.abrupt(\"return\",this.activeToken);case 9:case\"end\":return _context2.stop();}},_callee2,this);}));function getToken(){return _getToken.apply(this,arguments);}return getToken;}()// This function authenticates a user, which involves getting a new token\n// It returns a modified object with a new authorization header.\n},{key:\"authenticate\",value:function(){var _authenticate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(props){var token;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.getToken();case 2:token=_context3.sent;if(token&&token.access_token){props.mode='cors';delete props.credentials;props.headers=_objectSpread(_objectSpread({},props.headers),{},{Authorization:\"Bearer \".concat(this.activeToken.access_token)});}return _context3.abrupt(\"return\",props);case 5:case\"end\":return _context3.stop();}},_callee3,this);}));function authenticate(_x){return _authenticate.apply(this,arguments);}return authenticate;}()}]);return SDKSession;}(AuthSession);// This class sets the fetchToken to use the 'real' address of the backend server.\nvar SDKSessionEmbed=/*#__PURE__*/function(_SDKSession){_inherits(SDKSessionEmbed,_SDKSession);var _super2=_createSuper(SDKSessionEmbed);function SDKSessionEmbed(){_classCallCheck(this,SDKSessionEmbed);return _super2.apply(this,arguments);}_createClass(SDKSessionEmbed,[{key:\"fetchToken\",value:function(){var _fetchToken2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",fetch(\"\".concat(process.env.REACT_APP_BACKEND_SERVER)));case 1:case\"end\":return _context4.stop();}},_callee4);}));function fetchToken(){return _fetchToken2.apply(this,arguments);}return fetchToken;}()}]);return SDKSessionEmbed;}(SDKSession);// This creates a new session with the 'real' address used above\nvar session=new SDKSessionEmbed(_objectSpread(_objectSpread({},DefaultSettings),{},{base_url:process.env.REACT_APP_LOOKER_API_HOST}));// This exports the SDK with the authenticated session\nexport var sdk=new Looker40SDK(session);","map":{"version":3,"names":["Looker40SDK","AuthToken","AuthSession","BrowserTransport","DefaultSettings","SDKSession","_AuthSession","_inherits","_super","_createSuper","settings","transport","_this","_classCallCheck","call","activeToken","_createClass","key","value","_fetchToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","fetch","stop","fetchToken","apply","arguments","isAuthenticated","token","access_token","isActive","_getToken","_callee2","res","_callee2$","_context2","sent","json","setToken","user_token","getToken","_authenticate","_callee3","props","_callee3$","_context3","mode","credentials","headers","_objectSpread","Authorization","concat","authenticate","_x","SDKSessionEmbed","_SDKSession","_super2","_fetchToken2","_callee4","_callee4$","_context4","process","env","REACT_APP_BACKEND_SERVER","session","base_url","REACT_APP_LOOKER_API_HOST","sdk"],"sources":["C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/src/looker/looker-connection.js"],"sourcesContent":["import { Looker40SDK } from '@looker/sdk'\r\nimport {\r\n  AuthToken,\r\n  AuthSession,\r\n  BrowserTransport,\r\n  DefaultSettings,\r\n} from '@looker/sdk-rtl'\r\n\r\nclass SDKSession extends AuthSession {\r\n  // This is a placeholder for the fetchToken function.\r\n  // It is modified to make it useful later.\r\n  async fetchToken() {\r\n    return fetch('')\r\n  }\r\n\r\n  activeToken = new AuthToken()\r\n  constructor(settings, transport) {\r\n    super(settings, transport || new BrowserTransport(settings))\r\n  }\r\n\r\n  // This function checks to see if the user is already authenticated\r\n  isAuthenticated() {\r\n    const token = this.activeToken\r\n    if (!(token && token.access_token)) return false\r\n    return token.isActive()\r\n  }\r\n\r\n  // This function gets the current token or fetches a new one if necessary\r\n  async getToken() {\r\n    if (!this.isAuthenticated()) {\r\n      const token = await this.fetchToken()\r\n      const res = await token.json()\r\n      this.activeToken.setToken(res.user_token)\r\n    }\r\n    return this.activeToken\r\n  }\r\n\r\n  // This function authenticates a user, which involves getting a new token\r\n  // It returns a modified object with a new authorization header.\r\n  async authenticate(props) {\r\n    const token = await this.getToken()\r\n    if (token && token.access_token) {\r\n      props.mode = 'cors'\r\n      delete props.credentials\r\n      props.headers = {\r\n        ...props.headers,\r\n        Authorization: `Bearer ${this.activeToken.access_token}`,\r\n      }\r\n    }\r\n    return props\r\n  }\r\n}\r\n\r\n// This class sets the fetchToken to use the 'real' address of the backend server.\r\nclass SDKSessionEmbed extends SDKSession {\r\n  async fetchToken() {\r\n    return fetch(`${process.env.REACT_APP_BACKEND_SERVER}`)\r\n  }\r\n}\r\n\r\n// This creates a new session with the 'real' address used above\r\nconst session = new SDKSessionEmbed({\r\n  ...DefaultSettings,\r\n  base_url: process.env.REACT_APP_LOOKER_API_HOST,\r\n})\r\n\r\n// This exports the SDK with the authenticated session\r\nexport const sdk = new Looker40SDK(session)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}