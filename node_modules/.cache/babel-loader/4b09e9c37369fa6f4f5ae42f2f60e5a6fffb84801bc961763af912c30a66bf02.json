{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/ximo.cerdan/AppData/Local/Google/Cloud SDK/mashup_iframe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linkHeaderParser = exports.TotalCountHeader = exports.Paging = exports.LinkHeader = void 0;\nexports.pageAll = pageAll;\nexports.pager = pager;\nvar _transport = require(\"./transport\");\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nvar LinkHeader = 'Link';\nexports.LinkHeader = LinkHeader;\nvar TotalCountHeader = 'X-Total-Count';\nexports.TotalCountHeader = TotalCountHeader;\nvar linkHeaderParser = function linkHeaderParser(linkHeader) {\n  var re = /<\\s*(.*)\\s*>;\\s*rel=\"\\s*(.*)\\s*\"\\s*/gm;\n  var links = linkHeader.split(',');\n  var obj = {};\n  var arrRes;\n  links.forEach(function (link) {\n    link = link.trim();\n    while (arrRes = re.exec(link)) {\n      var key = arrRes[2].split(' ')[0].trim().toLocaleLowerCase();\n      obj[key] = {\n        url: arrRes[1].trim(),\n        rel: key,\n        name: arrRes[2].trim()\n      };\n    }\n  });\n  return obj;\n};\nexports.linkHeaderParser = linkHeaderParser;\nfunction pager(_x, _x2, _x3) {\n  return _pager.apply(this, arguments);\n}\nfunction _pager() {\n  _pager = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, pageFunc, options) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return new Paging(sdk, pageFunc, options).init();\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _pager.apply(this, arguments);\n}\nfunction pageAll(_x4, _x5) {\n  return _pageAll.apply(this, arguments);\n}\nfunction _pageAll() {\n  _pageAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sdk, pageFunc) {\n    var onPage,\n      options,\n      paged,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          onPage = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : function (page) {\n            return page;\n          };\n          options = _args2.length > 3 ? _args2[3] : undefined;\n          _context2.next = 4;\n          return pager(sdk, pageFunc, options);\n        case 4:\n          paged = _context2.sent;\n          onPage(paged.items);\n          _context2.prev = 6;\n        case 7:\n          if (!paged.more()) {\n            _context2.next = 15;\n            break;\n          }\n          _context2.t0 = onPage;\n          _context2.next = 11;\n          return sdk.ok(paged.nextPage());\n        case 11:\n          _context2.t1 = _context2.sent;\n          (0, _context2.t0)(_context2.t1);\n          _context2.next = 7;\n          break;\n        case 15:\n          _context2.next = 20;\n          break;\n        case 17:\n          _context2.prev = 17;\n          _context2.t2 = _context2[\"catch\"](6);\n          return _context2.abrupt(\"return\", Promise.reject(_context2.t2));\n        case 20:\n          return _context2.abrupt(\"return\", paged);\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[6, 17]]);\n  }));\n  return _pageAll.apply(this, arguments);\n}\nvar Paging = /*#__PURE__*/function () {\n  function Paging(sdk, func, options) {\n    _classCallCheck(this, Paging);\n    this.sdk = sdk;\n    this.func = func;\n    this.options = options;\n    _defineProperty(this, \"items\", []);\n    _defineProperty(this, \"links\", {});\n    _defineProperty(this, \"total\", -1);\n    _defineProperty(this, \"offset\", -1);\n    _defineProperty(this, \"limit\", -1);\n    _defineProperty(this, \"transport\", void 0);\n    this.transport = sdk.authSession.transport;\n  }\n  _createClass(Paging, [{\n    key: \"rawCatch\",\n    value: function rawCatch(func) {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var raw, saved;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              raw = {};\n              saved = _this.transport.observer;\n              _context3.prev = 2;\n              _this.transport.observer = function (response) {\n                if (saved) {\n                  response = saved(response);\n                }\n                raw = response;\n                return response;\n              };\n              _context3.next = 6;\n              return (0, _transport.sdkOk)(func());\n            case 6:\n              _this.items = _context3.sent;\n            case 7:\n              _context3.prev = 7;\n              _this.transport.observer = saved;\n              return _context3.finish(7);\n            case 10:\n              if (!(Object.keys(raw).length === 0 || Object.keys(raw.headers).length === 0)) {\n                _context3.next = 12;\n                break;\n              }\n              return _context3.abrupt(\"return\", Promise.reject(new Error('No paging headers were found')));\n            case 12:\n              _this.parse(raw);\n              return _context3.abrupt(\"return\", _this);\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[2,, 7, 10]]);\n      }))();\n    }\n  }, {\n    key: \"page\",\n    get: function get() {\n      if (this.limit < 1 || this.offset < 0) return -1;\n      var x = this.offset / this.limit + 1;\n      return Math.ceil(x);\n    }\n  }, {\n    key: \"pages\",\n    get: function get() {\n      if (this.total < 1 || this.limit < 1) return -1;\n      var x = this.total / this.limit;\n      return Math.ceil(x);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this2.rawCatch(_this2.func);\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  }, {\n    key: \"hasRel\",\n    value: function hasRel(link) {\n      return !!this.links[link];\n    }\n  }, {\n    key: \"more\",\n    value: function more() {\n      return this.hasRel('next');\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.links = {};\n      this.total = this.offset = this.limit = -1;\n      this.items = [];\n    }\n  }, {\n    key: \"getRel\",\n    value: function getRel(name, limit, offset) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rel, result, authenticator, link, url, params, raw;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              rel = _this3.links[name];\n              _this3.reset();\n              if (rel) {\n                _context5.next = 5;\n                break;\n              }\n              result = {\n                ok: true,\n                value: _this3.items\n              };\n              return _context5.abrupt(\"return\", result);\n            case 5:\n              authenticator = function authenticator(init) {\n                return _this3.sdk.authSession.authenticate(init);\n              };\n              link = rel.url;\n              if (!(limit !== undefined)) {\n                _context5.next = 17;\n                break;\n              }\n              if (offset === undefined) {\n                offset = 0;\n              }\n              if (!(limit < 1 || offset < 0)) {\n                _context5.next = 12;\n                break;\n              }\n              result = {\n                ok: false,\n                error: new Error('limit must be > 0 and offset must be >= 0')\n              };\n              return _context5.abrupt(\"return\", result);\n            case 12:\n              url = new URL(link);\n              params = url.searchParams;\n              params.set('limit', limit.toString());\n              params.set('offset', offset.toString());\n              link = url.toString();\n            case 17:\n              _context5.next = 19;\n              return _this3.transport.rawRequest('GET', link, undefined, undefined, authenticator, _this3.options);\n            case 19:\n              raw = _context5.sent;\n              _context5.prev = 20;\n              _this3.parse(raw);\n              _context5.next = 24;\n              return (0, _transport.sdkOk)(_this3.transport.parseResponse(raw));\n            case 24:\n              _this3.items = _context5.sent;\n              result = {\n                ok: true,\n                value: _this3.items\n              };\n              _context5.next = 31;\n              break;\n            case 28:\n              _context5.prev = 28;\n              _context5.t0 = _context5[\"catch\"](20);\n              result = {\n                ok: false,\n                error: _context5.t0\n              };\n            case 31:\n              return _context5.abrupt(\"return\", result);\n            case 32:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[20, 28]]);\n      }))();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw) {\n      var params = new URL(raw.url, 'http://default').searchParams;\n      this.limit = Paging.paramDefault(params.get('limit'), -1);\n      this.offset = Paging.paramDefault(params.get('offset'), this.limit > 0 ? 0 : -1);\n      var linkHeader = Paging.findHeader(raw, LinkHeader);\n      if (linkHeader) {\n        this.links = linkHeaderParser(linkHeader);\n      } else {\n        this.links = {};\n      }\n      var totalHeader = Paging.findHeader(raw, TotalCountHeader);\n      if (totalHeader) {\n        this.total = parseInt(totalHeader.trim(), 10);\n      } else {\n        this.total = -1;\n      }\n      return this;\n    }\n  }, {\n    key: \"firstPage\",\n    value: function firstPage() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _this4.getRel('first');\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  }, {\n    key: \"lastPage\",\n    value: function lastPage() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _this5.getRel('last');\n            case 2:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    }\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _this6.getRel('next');\n            case 2:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  }, {\n    key: \"prevPage\",\n    value: function prevPage() {\n      var _this7 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _this7.getRel('prev');\n            case 2:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }))();\n    }\n  }], [{\n    key: \"paramDefault\",\n    value: function paramDefault(value, defaultValue) {\n      var convert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (v) {\n        return parseInt(v, 10);\n      };\n      if (value === null) return defaultValue;\n      return convert(value);\n    }\n  }, {\n    key: \"findHeader\",\n    value: function findHeader(raw, name) {\n      return raw.headers[name] || raw.headers[name.toLowerCase()] || raw.headers[name.toUpperCase()];\n    }\n  }]);\n  return Paging;\n}();\nexports.Paging = Paging;","map":{"version":3,"names":["_transport","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","LinkHeader","exports","TotalCountHeader","linkHeaderParser","linkHeader","re","links","split","arrRes","forEach","link","trim","exec","toLocaleLowerCase","url","rel","name","pager","_x","_x2","_x3","_pager","_regeneratorRuntime","mark","_callee","sdk","pageFunc","options","wrap","_callee$","_context","prev","next","Paging","init","abrupt","sent","stop","pageAll","_x4","_x5","_pageAll","_callee2","onPage","paged","_args2","_callee2$","_context2","length","page","items","more","t0","ok","nextPage","t1","t2","func","_classCallCheck","transport","authSession","_createClass","rawCatch","_this","_callee3","raw","saved","_callee3$","_context3","observer","response","sdkOk","finish","keys","headers","Error","parse","get","limit","offset","x","Math","ceil","total","_this2","_callee4","_callee4$","_context4","hasRel","reset","getRel","_this3","_callee5","result","authenticator","params","_callee5$","_context5","authenticate","URL","searchParams","set","toString","rawRequest","parseResponse","paramDefault","findHeader","totalHeader","parseInt","firstPage","_this4","_callee6","_callee6$","_context6","lastPage","_this5","_callee7","_callee7$","_context7","_this6","_callee8","_callee8$","_context8","prevPage","_this7","_callee9","_callee9$","_context9","defaultValue","convert","v","toLowerCase","toUpperCase"],"sources":["C:\\Users\\ximo.cerdan\\AppData\\Local\\Google\\Cloud SDK\\mashup_iframe\\node_modules\\@looker\\sdk-rtl\\src\\paging.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { IRawResponse, ITransportSettings, SDKResponse } from './transport'\nimport { sdkOk } from './transport'\nimport type { IAPIMethods } from './apiMethods'\nimport type { BaseTransport } from './baseTransport'\n\nexport const LinkHeader = 'Link'\nexport const TotalCountHeader = 'X-Total-Count'\n\n/**\n * Types of paging link relative URLs\n * based on https://docs.github.com/en/rest/overview/resources-in-the-rest-api#link-header\n */\nexport type PageLinkRel = 'first' | 'last' | 'next' | 'prev'\n\n/** Constraints for TSuccess type */\ninterface ILength {\n  length: number\n}\n\n/** Result paging function call */\nexport type PagingFunc<TSuccess, TError> = () => Promise<\n  SDKResponse<TSuccess, TError>\n>\n\n/** Page link structure */\nexport interface IPageLink {\n  /** Name of link */\n  name?: string\n  /** Type of link */\n  rel: PageLinkRel\n  /** Media type for link */\n  mediaType?: string\n  /** URL for retrieving the link results */\n  url: string\n}\n\n/**\n * Collection of page links\n *\n * TODO can this be Record<PageLinkRel, IPageLink> instead and still init to {}?\n */\nexport type PageLinks = Record<string, IPageLink>\n\nexport interface IPager<TSuccess, TError> {\n  /** Total number of available items being paginated */\n  total: number\n  /** Offset extracted from pager request */\n  offset: number\n  /** Limit extracted from pager request */\n  limit: number\n  /** Paging links extracted from Link header */\n  links: PageLinks\n  /** Latest items returned from response */\n  items: TSuccess\n  /** Captured from the original paging request */\n  options?: Partial<ITransportSettings>\n  /** Total number of pages. -1 if not known. */\n  pages: number\n  /** Current page. -1 if not known. */\n  page: number\n\n  /**\n   * Is the specified link rel defined in the Link header?\n   * @param link to check\n   */\n  hasRel(link: PageLinkRel): boolean\n\n  /**\n   * GET the requested relative link\n   *\n   * if the requested link is not defined, all calculated values are reset to their defaults, including\n   * `total`, `items`, `offset`, and `limit`\n   *\n   * @param name of Link Relationship\n   * @param limit optional limit override to replace limit saved in `rel`\n   * @param offset optional offset override to replace offset saved in `rel`\n   */\n  getRel(\n    name: PageLinkRel,\n    limit?: number,\n    offset?: number\n  ): Promise<SDKResponse<TSuccess, TError>>\n\n  /** Get the first page of items. This is the same as offset=0 */\n  firstPage(): Promise<SDKResponse<TSuccess, TError>>\n  /**\n   * Get the last page of items\n   *\n   * @remarks This link is only provided if `total` is known.\n   */\n  lastPage(): Promise<SDKResponse<TSuccess, TError>>\n  /**\n   * Get the next page of items\n   *\n   * @remarks This link is provided if `total` is known, or if the number of items returned == `limit`. In the latter case, this function may return an empty result set.\n   */\n  nextPage(): Promise<SDKResponse<TSuccess, TError>>\n  /**\n   * Get the previous page of items\n   *\n   * @remarks This link is provided if the last page was not the first page.\n   */\n  prevPage(): Promise<SDKResponse<TSuccess, TError>>\n\n  /** `true` if the `next` link is defined */\n  more(): boolean\n}\n\n/**\n * Parse a link header to extract rels\n * @param linkHeader to parse\n *\n * Several different approaches are discussed at https://stackoverflow.com/questions/8735792/how-to-parse-link-header-from-github-api\n *\n * Unfortunately, none of them are a good implementation\n *\n */\nexport const linkHeaderParser = (linkHeader: string): PageLinks => {\n  const re = /<\\s*(.*)\\s*>;\\s*rel=\"\\s*(.*)\\s*\"\\s*/gm\n  const links = linkHeader.split(',')\n  const obj: PageLinks = {}\n  let arrRes\n\n  links.forEach((link) => {\n    link = link.trim()\n    while ((arrRes = re.exec(link))) {\n      const key = arrRes[2].split(' ')[0].trim().toLocaleLowerCase()\n      obj[key] = {\n        url: arrRes[1].trim(),\n        rel: key as PageLinkRel,\n        name: arrRes[2].trim(),\n      }\n    }\n  })\n  return obj\n}\n\n/** Event to observe the paging call */\nexport type PageObserver<TSuccess> = (\n  /** Current retrieved page of results */\n  page: TSuccess\n) => TSuccess\n\n/**\n * Create an API response pager for an endpoint that returns a Link header\n * @param sdk implementation of IAPIMethods. Can be a full SDK or functional auth session. The active transport object is captured from this parameter, which is why it must be passed separately from the paging function.\n * @param pageFunc sdk call that includes a paging header\n * @param options transport options override to capture and use in paging requests\n *\n * @remarks `TSuccess` must be a collection type that supports `length`\n */\nexport async function pager<TSuccess extends ILength, TError>(\n  sdk: IAPIMethods,\n  pageFunc: PagingFunc<TSuccess, TError>,\n  options?: Partial<ITransportSettings>\n): Promise<IPager<TSuccess, TError>> {\n  return await new Paging<TSuccess, TError>(sdk, pageFunc, options).init()\n}\n\n/**\n * Create an API response pager and iterate through all pages, calling a page event per page\n * @param sdk implementation of IAPIMethods. Can be a full SDK or functional auth session. The active transport object is captured from this parameter, which is why it must be passed separately from the paging function.\n * @param pageFunc sdk call that includes a paging header\n * @param onPage observer of the latest page of results. Defaults to noop.\n * @param options transport options override to capture and use in paging requests\n *\n * @remarks `TSuccess` must be a collection type that supports `length`\n */\nexport async function pageAll<TSuccess extends ILength, TError>(\n  sdk: IAPIMethods,\n  pageFunc: PagingFunc<TSuccess, TError>,\n  onPage: PageObserver<TSuccess> = (page: TSuccess) => page,\n  options?: Partial<ITransportSettings>\n): Promise<IPager<TSuccess, TError>> {\n  const paged = await pager(sdk, pageFunc, options)\n  // Process the first page\n  onPage(paged.items)\n  try {\n    while (paged.more()) {\n      // Pass the page items to the event\n      onPage(await sdk.ok(paged.nextPage()))\n    }\n  } catch (err) {\n    return Promise.reject(err)\n  }\n  return paged\n}\n\n/**\n * Link header pages class\n */\nexport class Paging<TSuccess extends ILength, TError>\n  implements IPager<TSuccess, TError>\n{\n  items: TSuccess = [] as unknown as TSuccess\n  links: PageLinks = {}\n  total = -1\n  offset = -1\n  limit = -1\n\n  private transport: BaseTransport\n\n  /**\n   * Create an API paginator\n   * @param sdk functional AuthSession or full SDK implementation\n   * @param func sdk function to call\n   * @param options transport overrides to use for subsequent requests\n   */\n  constructor(\n    public sdk: IAPIMethods,\n    public func: PagingFunc<TSuccess, TError>,\n    public options?: Partial<ITransportSettings>\n  ) {\n    this.transport = sdk.authSession.transport as BaseTransport\n  }\n\n  private async rawCatch(func: () => any) {\n    let raw: IRawResponse = {} as IRawResponse\n    const saved = this.transport.observer\n    try {\n      // Capture the raw request for header parsing\n      this.transport.observer = (response: IRawResponse) => {\n        if (saved) {\n          // Chain the observer\n          response = saved(response)\n        }\n        raw = response\n        return response\n      }\n      this.items = await sdkOk(func())\n    } finally {\n      // Restore the previous observer (if any)\n      this.transport.observer = saved\n    }\n    if (Object.keys(raw).length === 0 || Object.keys(raw.headers).length === 0)\n      return Promise.reject(new Error('No paging headers were found'))\n    this.parse(raw)\n    return this\n  }\n\n  get page(): number {\n    if (this.limit < 1 || this.offset < 0) return -1\n    const x = this.offset / this.limit + 1\n    return Math.ceil(x)\n  }\n\n  get pages(): number {\n    if (this.total < 1 || this.limit < 1) return -1\n    const x = this.total / this.limit\n    return Math.ceil(x)\n  }\n\n  async init() {\n    return await this.rawCatch(this.func)\n  }\n\n  hasRel(link: PageLinkRel): boolean {\n    return !!this.links[link]\n  }\n\n  more() {\n    return this.hasRel('next')\n  }\n\n  /**\n   * Default string value\n   * @param value to retrieve or default\n   * @param defaultValue to apply if string is null\n   * @param convert function to convert assigned string value\n   * @private\n   */\n  private static paramDefault(\n    value: string | null,\n    defaultValue: any,\n    convert = (v: string) => parseInt(v, 10)\n  ) {\n    if (value === null) return defaultValue\n    return convert(value)\n  }\n\n  reset() {\n    this.links = {}\n    this.total = this.offset = this.limit = -1\n    this.items = [] as unknown as TSuccess\n  }\n\n  async getRel(\n    name: PageLinkRel,\n    limit?: number,\n    offset?: number\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    const rel = this.links[name]\n    let result: SDKResponse<TSuccess, TError>\n    this.reset()\n    if (!rel) {\n      result = { ok: true, value: this.items }\n      return result\n    }\n    const authenticator = (init: any) => {\n      return this.sdk.authSession.authenticate(init)\n    }\n\n    let link = rel.url\n    if (limit !== undefined) {\n      if (offset === undefined) {\n        offset = 0\n      }\n      if (limit < 1 || offset < 0) {\n        result = {\n          ok: false,\n          error: new Error(\n            'limit must be > 0 and offset must be >= 0'\n          ) as unknown as TError,\n        }\n        return result\n      }\n      const url = new URL(link)\n      const params = url.searchParams\n      params.set('limit', limit.toString())\n      params.set('offset', offset.toString())\n      link = url.toString()\n    }\n    const raw = await this.transport.rawRequest(\n      'GET',\n      link,\n      undefined,\n      undefined,\n      authenticator,\n      this.options\n    )\n    try {\n      this.parse(raw)\n      this.items = await sdkOk(this.transport.parseResponse(raw))\n      result = { ok: true, value: this.items }\n    } catch (e: any) {\n      result = { ok: false, error: e }\n    }\n    return result\n  }\n\n  static findHeader(raw: IRawResponse, name: string) {\n    return (\n      raw.headers[name] ||\n      raw.headers[name.toLowerCase()] ||\n      raw.headers[name.toUpperCase()]\n    )\n  }\n\n  parse(raw: IRawResponse): IPager<TSuccess, TError> {\n    const params = new URL(raw.url, 'http://default').searchParams\n    this.limit = Paging.paramDefault(params.get('limit'), -1)\n    this.offset = Paging.paramDefault(\n      params.get('offset'),\n      this.limit > 0 ? 0 : -1\n    )\n    const linkHeader = Paging.findHeader(raw, LinkHeader)\n    if (linkHeader) {\n      this.links = linkHeaderParser(linkHeader)\n    } else {\n      this.links = {}\n    }\n    const totalHeader = Paging.findHeader(raw, TotalCountHeader)\n    if (totalHeader) {\n      this.total = parseInt(totalHeader.trim(), 10)\n    } else {\n      this.total = -1\n    }\n    return this as unknown as IPager<TSuccess, TError>\n  }\n\n  async firstPage(): Promise<SDKResponse<TSuccess, TError>> {\n    return await this.getRel('first')\n  }\n\n  async lastPage(): Promise<SDKResponse<TSuccess, TError>> {\n    return await this.getRel('last')\n  }\n\n  async nextPage(): Promise<SDKResponse<TSuccess, TError>> {\n    return await this.getRel('next')\n  }\n\n  async prevPage(): Promise<SDKResponse<TSuccess, TError>> {\n    return await this.getRel('prev')\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}